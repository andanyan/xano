syntax = "proto3";
package deal;

option go_package = "../deal";

// double float int32 int64 uint32 uint64 sint32 sint64 
// fixed32 fixed64 sfixed64 sfixed32 sfixed64 bool string bytes
// repeated optional required
// protoc 3.19.2
// protoc --proto_path=. --go_out=. *.proto
// protoc-go-inject-tag --input=*.pb.go 

// 包消息
message Msg {
    // 路由 模块_方法
    // @inject_tag: json:"route"
    string route = 1;
    // 消息id
    // @inject_tag: json:"mid"
    uint64 mid = 2;
    // 消息类型
    uint32 msg_type = 3;
    // data数据协议
    // @inject_tag: json:"deal"
    uint32 deal = 4;
    // 数据
    // @inject_tag: json:"data"
    bytes data = 5;
    // 版本号
    string version = 6;
}

// 心跳
message Ping {}
message Pong {
    int64 Pong = 1;
}

// 路由注册
message MemberStartNotice {
    // 版本号
    string Version = 1;
    // 端口
    string Port = 2;
}

// 路由关闭
message MemberStopNotice {}

// member node
message MemberNode {
    string Version = 1;
    string Addr = 2;
    int64 LastTime = 3;
}

// server node
message ServerNode {
    string Version = 1;
    string Addr = 2;
    int64 LastTime = 3;
    repeated string Routes = 4;
}

// 从节点推送
message MemberNodePush {
    repeated MemberNode Nodes = 1;
}

// 服务节点启动
message ServerStartNotice {
    // 版本号
    string Version = 1;
    // 端口
    string Port = 2;
    // 路由
    repeated string Routes = 3;
}

// 服务节点关闭
message ServerStopNotice {}

// 服务节点推送
message ServerNodePush {
    repeated ServerNode Nodes = 1;
}

// 所有服务节点返回
message ServerNodesRequest {}

message ServerNodesResponse {
    repeated ServerNode nodes = 1;
}

// 所有服务节点返回
message MemberNodesRequest {}

message MemberNodesResponse {
    repeated MemberNode nodes = 1;
}